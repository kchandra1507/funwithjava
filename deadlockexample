class Resources
{
Queue q;
Resources(Queue q)
{
this.q=q;
}
void resource1()
{
synchronized(q)
{
System.out.println("lock aquired on new obeject");
q.show();
synchronized(this)
{
System.out.println("lock aquired on current object");
this.display();
}
}
}
void resource2()
{
synchronized(this)
{
System.out.println("lock aquired on current object in resource2");
this.display();
synchronized(q)
{
System.out.println("lock aquired on new obeject in resource2");
q.show();
}
}
}
void display()
{
for(int i=0;i<5;i++)
{
System.out.println("method of Resources" );
}
}
}
class Queue
{
public void show()
{
for(int i=0;i<5;i++)
{
System.out.println("method of Queue");
}
}
}
class Thread1 implements Runnable
{
Resources r;
Thread1(Resources r)
{
this.r=r;
}
public void run()
{
r.resource1();
}
}
class Thread2 implements Runnable
{
Resources r;
Thread2(Resources r)
{
this.r=r;
}
public void run()
{
r.resource2();
}
}
class Main
{
public static void main(String... aa)
{
Queue q=new Queue();
Resources r=new Resources(q);
Thread t1=new Thread(new Thread1(r));
Thread t2=new Thread(new Thread2(r));
t1.start();
t2.start();
}
}


